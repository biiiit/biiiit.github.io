{"version":3,"sources":["layout/BasicLayout.tsx","components/Rain/index.tsx","pages/HomePage/index.tsx","Site.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasicLayout","children","Rain","useEffect","then","init","className","id","HomePage","sceneRef","useRef","parallaxInstance","Parallax","current","relativeInput","hoverOnly","enable","disable","ref","Site","scrollOverflow","sectionsColor","render","state","fullpageApi","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"gPAQeA,EAFK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAuC,mCAAGA,K,sCCH/C,SAASC,IAItB,OAHAC,qBAAU,WACR,6BAAyBC,MAAK,mBAAcC,EAAd,EAAGA,aAChC,IAED,sBAAKC,UAAU,iBAAf,UACE,wBAAQC,GAAG,YACX,wBAAQA,GAAG,YACX,wBAAQA,GAAG,YACX,wBAAQA,GAAG,e,MCmDFC,MAzDf,WACE,IAAMC,EAAWC,iBAAO,MAYxB,OAVAP,qBAAU,WACR,IAAMQ,EAAmB,IAAIC,IAASH,EAASI,QAAS,CACtDC,eAAe,EACfC,WAAW,IAIb,OADAJ,EAAiBK,SACV,kBAAML,EAAiBM,aAC7B,IAGD,sBAAKV,GAAG,YAAYD,UAAU,YAA9B,UACE,cAAC,EAAD,IACA,qBACEC,GAAG,QACHD,UAAU,QACV,kBAAgB,MAChB,kBAAgB,MAChB,gBAAc,KACd,gBAAc,KACdY,IAAKT,EAPP,UASE,oBAAI,aAAW,OAAOH,UAAU,kBAAhC,SACE,oBAAIA,UAAU,QAAd,0CAGF,oBAAI,aAAW,OAAf,SACE,qBAAKA,UAAU,iBAGjB,oBAAI,aAAW,OAAf,SACE,qBAAKA,UAAU,mBAGjB,oBAAI,aAAW,OAAf,SACE,qBAAKA,UAAU,mBAGjB,oBAAI,aAAW,OAAf,SACE,qBAAKA,UAAU,mBAGjB,oBAAI,aAAW,OAAf,SACE,qBAAKA,UAAU,mBAEjB,oBAAI,aAAW,OAAf,SAEE,qBAAKA,UAAU,2BCpBVa,MAhCf,WACE,OACE,cAAC,IAAD,CACEC,gBAAgB,EAChBC,cAAe,CAAC,OAAQ,SAAU,SAClCC,OAAQ,YAA8D,EAA3DC,MAA2D,EAApDC,YAChB,OACE,qBAAKjB,GAAG,mBAAR,SACE,qBAAKD,UAAU,mBAAf,SACE,cAAC,EAAD,Y,MCGCmB,MAVf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,SCIOoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a2a0cda1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst BasicLayout = ({ children }: IProps): JSX.Element => <>{children}</>;\r\n\r\nexport default BasicLayout;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function Rain(): JSX.Element {\r\n  useEffect(() => {\r\n    import(\"../../lib/rain\").then(({ init }) => init());\r\n  }, []);\r\n  return (\r\n    <div className=\"rain-container\">\r\n      <canvas id=\"thunder\"></canvas>\r\n      <canvas id=\"canvas1\"></canvas>\r\n      <canvas id=\"canvas2\"></canvas>\r\n      <canvas id=\"canvas3\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Parallax from \"parallax-js\";\r\nimport Rain from \"../../components/Rain\";\r\n\r\nimport \"./index.css\";\r\n\r\nfunction HomePage() {\r\n  const sceneRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const parallaxInstance = new Parallax(sceneRef.current, {\r\n      relativeInput: true,\r\n      hoverOnly: true,\r\n    });\r\n\r\n    parallaxInstance.enable();\r\n    return () => parallaxInstance.disable();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"container\" className=\"container\">\r\n      <Rain></Rain>\r\n      <ul\r\n        id=\"scene\"\r\n        className=\"scene\"\r\n        data-friction-x=\"0.1\"\r\n        data-friction-y=\"0.1\"\r\n        data-scalar-x=\"25\"\r\n        data-scalar-y=\"15\"\r\n        ref={sceneRef}\r\n      >\r\n        <li data-depth=\"0.20\" className=\"title-container\">\r\n          <h1 className=\"title\">I just don't want to lose.</h1>\r\n        </li>\r\n\r\n        <li data-depth=\"0.10\">\r\n          <div className=\"background\"></div>\r\n        </li>\r\n\r\n        <li data-depth=\"0.40\">\r\n          <div className=\"wave wave-40\"></div>\r\n        </li>\r\n\r\n        <li data-depth=\"0.50\">\r\n          <div className=\"wave wave-50\"></div>\r\n        </li>\r\n\r\n        <li data-depth=\"0.60\">\r\n          <div className=\"wave wave-60\"></div>\r\n        </li>\r\n\r\n        <li data-depth=\"0.80\">\r\n          <div className=\"wave wave-80\"></div>\r\n        </li>\r\n        <li data-depth=\"1.00\">\r\n          {/* 最前面的海浪 */}\r\n          <div className=\"wave wave-100\"></div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport ReactFullpage from \"@fullpage/react-fullpage\";\r\nimport HomePage from \"./pages/HomePage\";\r\n\r\nfunction Site(): JSX.Element {\r\n  return (\r\n    <ReactFullpage\r\n      scrollOverflow={true}\r\n      sectionsColor={[\"#000\", \"purple\", \"green\"]}\r\n      render={({ state, fullpageApi }: { state: any; fullpageApi: any }) => {\r\n        return (\r\n          <div id=\"fullpage-wrapper\">\r\n            <div className=\"section section1\">\r\n              <HomePage></HomePage>\r\n            </div>\r\n            {/* <div className=\"section\">\r\n              <div className=\"slide\">\r\n                <h3>Slide 2.1</h3>\r\n              </div>\r\n              <div className=\"slide\">\r\n                <h3>Slide 2.2</h3>\r\n              </div>\r\n              <div className=\"slide\">\r\n                <h3>Slide 2.3</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"section\">\r\n              <h3>Section 3</h3>\r\n            </div> */}\r\n          </div>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Site;\r\n","import React from \"react\";\nimport BasicLayout from \"./layout/BasicLayout\";\nimport Site from \"./Site\";\n\nimport \"./App.css\";\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <BasicLayout>\n        <Site></Site>\n      </BasicLayout>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}